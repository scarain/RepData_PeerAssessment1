> h5read("example.h5","foo/A")
[,1] [,2]
[1,]   12    6
[2,]   13    7
[3,]   14    8
[4,]    4    9
[5,]    5   10
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes=T)
library(httr)
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg2 = GET("http://httpbin.org/basic-auth/user/passwd",)
pg2 = GET("http://httpbin.org/basic-auth/user/passwd",authenticate("user","passwd"))
pg2
names(pg2)
google = handle("http://google.com")
pg1 = GET(handle=google, path="/")
pg2 = GET(handle=google,path="search")
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,z)
plot(x,y)
par(mar=c(2,2,2,2))
plot(x,y)
par(mar=c(4,4,2,2))
plot(x,y)
plot(x,y,pch=20)
example("points")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(12)
abline(h=12)
hist(ppm)
hist(ppm,col="green")
rug(ppm)
low(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), cl="magenta", lwd=4)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(east,col="green")
hist(east$pm25,col="green")
hist(subset(pollution, region=="east",select=pm25),col="green")
?subset
hist(subset(pollution, region=="west",select=pm25),col="green")
class(subset(pollution, region=="west",select=pm25))
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
(mfrow = c(1,2), mar = c(5, 4, 2, 1))
par (mfrow = c(1,2), mar = c(5, 4, 2, 1))
subset(pollution, region=="west")
west <- subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(west$latitude,west$pm25,main="East")
plot(east$latitude,east$pm25,main="East")
q()
swirl（）
library(swirl())
swirl()
head(cars)
plot(speed,dist)
with(cars,plot(speed,dist))
swirl()
head(data)
head(airquality)
xyplot(Ozone~wind, data = airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Bid Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local = TRUE)
str(diomonds)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit(mLabels.R)
myedit(myLabels.R)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red,"yellow))
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rggb
?rgb
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
胖
p3
p3(5)
plot(x,y,pch=19, col=rgb(0,.5,.5))
plot(x,y,pch=19, col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3,"BuGn")
cols
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, aes(col = drv))
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point","smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data =mpg, geom = "boxplot")
qplot(drv, hwy, data =mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g +geom_point()
g +geom_point() + geom_smooth()
g +geom_point() + geom_smooth(method = "lm")
g +geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g +geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle = "Swirl Rules!"
g +geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linethpe = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim=(-3,3))
plot(myx, myy, type = "l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x = myx, y =myy))
g + geom_line()
g + geom_line(ylim = c(-3,3))
g + geom_line() + tlim(-3,3)
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x= "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow = 40)
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
par(mar = rep(0.2,4))
heatpam(dataMatrix)
heatmap(dataMatrix)
set.seed(678910)
for (i in 1:40) {}
set.seed(678910)
for (i in 1:40) {
#flip a coin
coinFlip <- rbnorm(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coniFlip) {
dataMatrix[1, ] <- dataMatrix[i, ] + rep(c(0,3), each = 5)
}
}
set.seed(678910)
for (i in 1:40) {
#flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coniFlip) {
dataMatrix[1, ] <- dataMatrix[i, ] + rep(c(0,3), each = 5)
}
}
if (coinFlip) {
set.seed(678910)
for (i in 1:40) {
#flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,3), each = 5)
}
}
par(mar = rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
)
par(mar = rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow = 40)
set.seed(678910)
for (i in 1:40) {
#flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,3), each = 5)
}
}
par(mar = rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
heatmap(dataMatrix)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mfrow = c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
par(mfrow = c(1,1))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
svd1 <- scd(scale(dataMatrixOrdered))
par(mfrow = c(1,3))
image(t(dataMatrixOrder)[,nrow(dataMatrixOrdered):1])
plot (svd1$u[,1], 40:1, ,xlab = "Row", ylab = "First left singular vector", pch=19)
plot(svd1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
svd1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1,3))
image(t(dataMatrixOrder)[,nrow(dataMatrixOrdered):1])
plot (svd1$u[,1], 40:1, ,xlab = "Row", ylab = "First left singular vector", pch=19)
plot(svd1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mfrow = c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
svd1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot (svd1$u[,1], 40:1, ,xlab = "Row", ylab = "First left singular vector", pch=19)
plot(svd1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
library(swirl)
swirl()
dist(dataFrame)
hclust(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
print(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
12
abline(h = 0..5, col = "green")
abline(h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(as.dendrogram(denmt))
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch = 19, cex = 2 ,lwd =2)
points(x,y,pch = 19, cex = 2 ,col=cols1[newClust2])
tapply(x,  newClust2,mean)
tapply(y, newClust2,mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y,col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit(addPatt.R)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
scd(mat)
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd$d
scd2 <- scd(constantMatrix)
svd2 <- svd(constantMatrix)
svd2$d
svd2[v][1:2]
svd2["v"][1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[562,563])
names(ssd[562:563])
library(swirl)
swirl()
table(ssd$subject)
sum(ssd$subject)
sum(table(ssd$subject))
table(ssd$subjects)
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
sub1
dim(sub1)
names(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd(scale(sub1[,-c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12],maxCon))
mdist <- dist(c(sub1[10:12],maxCon))
mdist <- dist(sub1[,c([10:12],maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust <- kmeans(sub1[,-c(562,563)],centers = 6)
kClust <- kmeans(sub1[,-c(562,563)],centers = 6)
table(kCluster$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity, nstart = 100)
kClust <- kmeans(sub1[,-c(562,563)],centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch =19, ylab = "Walkdown Cluster")
library（swirl）
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
?strsplit
cnames <- strstring(cnames,"|",fixed = TRUE)
cnames <- strsplit(cnames,"|",fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm)
sum(negative, na.rm=TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
intersect(site0,site1)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0,x0sub, pch=20)
abline(h = median(x0sub), lwd = 2)
abline(h = median(x0sub), lwd = 2, na.rm = TRUE)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1,x1sub, pch=20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1,"state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52),mrg[,2],xlim = c(.5,2.5)))
with(mrg, plot(rep(2,52),mrg[,3]))
with(mrg, points(rep(2,52),mrg[,3]))
with(mrg, plot(rep(1,52),mrg[,2],xlim = c(.5,2.5)))
with(mrg, points(rep(2,52),mrg[,3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.X < mrg$mean.y,]
mrg[mrg$mean.x < mrg$mean.y,]
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
?qnorm
qnorm(0.95,1100,75)
qnorm(0.95,1100,75/10)
?pbinom
pbinom(c(4,5),5,0.5)
pbinom(3,5,0.5)
?ppois
rpois(10,15)
ppois(10, 15)
setwd("D:/YY/Coursera/5. Reproducible Research/week 2/RepData_PeerAssessment1")
?dowonload.file
?download.file
knit("PA1_template.Rmd")
library(knitr)
knit("PA1_template.Rmd")
